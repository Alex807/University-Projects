Pasi in abordare sub OOP 

			!! MAXIM 50 MIN LA OOP

	[REQ1] --> 20 min (pune BRATARA obligatoriu)
1. realizeaza ierarhia de clase de la Req1 
2. fii EXTREM de atent la fiecare cuvant din enunt(pastreaza DENUMIRILE clase/metode) 
3. NU te complica cu comentarii, identare, denunmiri_Lungi !!
4. NU folosi tipuri complexe pt atribute daca nu este nevoie (DACA ai nevoie poti folosi enum-uri !!!
5. metoda comuna din BASE_CLASS sa fie (public FINAL type name(args) CA SA NU FACA SUBCLASELE override peste) 
	--> aplica TEMPLATE METHOD la metoda pt micile ajustari la schelet(creezi alte submetode abstracte)

 			##  NU TE COMPLICA CU LUCRURI INUTILE, TERMINA TOT TESTUL ##

5. in clasa abstracta ce ai niste param si ai o metoda cu ei, aplica TEMPLATE METHOD si adauga metode abstracte pe care le faci override in subclase cu param. lor specifici 
6. in clasa in care tii obiecte de tipul BASE si le prelucrezi, spune in comentarii ca folosesti STRATEGY PATTERN 
7. SA APELEZI CONSTRUCTOR { super(args) } pentru a instantia atributele superclasei(si cls ABSTRACTA trb sa aiba constructor PROTECTED) 
8. foloseste STRING.BUILDER si STRING.FORMAT cand ai nevoie

!!CAUTA COD DUPLICAT sau daca poti aplica un alt DP din lista!!

***DACA AI TIMP doar**** la FINAL poti face un factory pattern



	[REQ2] --> 30min (pune BRATARA obligatoriu)
1. citeste de 5 ORI cu atentie cerinta si intelege ce doreste sa faci 
2. gaseste ce {DesignPattern}, doar unul trb, din lista (sa ajute la ce zic ei, cauta cuv cheie ca sa-l gasesti si vezi scheme DESIGN cand scrii cod ) 
	***DACA ESTI SIGUR ca nu este din cele de la PDSS, verifica lista completa cu DP!!!!

3. acm ca stii DP necesar, lucreaza in permanenta cu o diagrama UML in fata 
4. respecta DENUMIRI(ale lor si cele standard pt. metodele din DP + exemplele date DE EI IN CERINTA  
5. fa-ti o SCHITA pe foaie pentru claritate(ia-o pe cea de la DP folosit si pune clasele tale sa te verifici)

	FINAL: ia codul din aplicatia lor si pune-l intr-un fisier si COMPILEAZA sa vezi daca ai uitat cv(vezi constructori cu SUPER in subclase)

